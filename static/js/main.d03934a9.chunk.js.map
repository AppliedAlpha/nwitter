{"version":3,"sources":["fBase.js","components/AuthForm.js","components/SocialService.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","SocialService","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","style","marginBottom","Nweet","nweetObj","isOwner","editing","setEditing","text","editedNweet","setEditedNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","alert","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","get","console","log","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAeAA,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAMJ,IAAMM,EAAmBT,IAEnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,UCsDxBC,EAxEE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAMbC,EAAW,SAACC,GAAW,IAAD,EACQA,EAAzBC,OAASC,EADQ,EACRA,KAAMC,EADE,EACFA,MACT,UAATD,EACAV,EAASW,GAEK,aAATD,GACLR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,gCAKQZ,EAAYwB,+BACrBhB,EAAOE,GANN,sDAUQV,EAAYyB,2BACrBjB,EAAOE,GAXN,yEAiBTK,EAAS,KAAMW,SAjBN,0DAAH,sDAwBd,OACI,qCACI,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACI,uBAAOR,KAAK,QACLS,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRV,MAAOZ,EACPQ,SAAUA,EACVW,UAAU,cAEjB,uBAAOR,KAAK,WACLS,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRV,MAAOV,EACPM,SAAUA,EACVW,UAAU,cAEjB,uBAAOC,KAAK,SACLD,UAAU,uBACVP,MAAOR,EAAa,kCAAW,uBAErCE,GAAS,sBAAMa,UAAU,YAAhB,SAA6Bb,OAE3C,sBAAMiB,QA7BQ,WAClBlB,GAAc,SAACmB,GAAD,OAAWA,MA4BSL,UAAU,aAAxC,SACKf,EAAa,qDAAe,8EC9B9BqB,EA/BO,WAClB,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,iBAAAK,EAAA,4DAGL,YAFGH,EAAWF,EAApBC,OAASC,MAGZgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBAEvB,WAATjB,IACLgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBAPvB,SASZrC,EAAYsC,gBAAgBH,GAThB,2CAAH,sDAYnB,OACI,sBAAKR,UAAU,WAAf,UACI,yBAAQR,KAAK,SACLQ,UAAU,UACVI,QAASG,EAFjB,kDAII,cAAC,IAAD,CAAiBK,KAAMC,SAE3B,yBAAQrB,KAAK,SACLQ,UAAU,UACVI,QAASG,EAFjB,wDAII,cAAC,IAAD,CAAiBK,KAAME,aCZxBC,EAfF,WACT,OACI,sBAAKf,UAAU,gBAAf,UACI,cAAC,IAAD,CACIY,KAAMI,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAE3B,cAAC,EAAD,IACA,cAAC,EAAD,Q,gBCyDGC,EApED,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAAa,EACL3C,oBAAS,GADJ,mBAC5B4C,EAD4B,KACnBC,EADmB,OAEG7C,mBAAS0C,EAASI,MAFrB,mBAE5BC,EAF4B,KAEfC,EAFe,KAI7BC,EAAa,uCAAG,sBAAAlC,EAAA,0DACPmC,OAAOC,QAAQ,sCADR,gCAGRxD,EAAUyD,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,UAIiB,KAA3BZ,EAASa,cAJC,gCAKJ1D,EAAe2D,WAAWd,EAASa,eAAeD,SAL9C,2CAAH,qDASbG,EAAgB,WAClBZ,GAAW,SAACpB,GAAD,OAAWA,MAGpBX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAUyD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAChDZ,KAAMC,IAHG,OAKbF,GAAW,GALE,2CAAH,sDAad,OACI,qBAAKzB,UAAU,QAAf,SAEQwB,EACI,qCACI,uBAAM9B,SAAUA,EAAUM,UAAU,sBAApC,UACI,uBAAOC,KAAK,OACLC,YAAY,kBACZT,MAAOkC,EACPtC,SAdd,SAACC,GAAW,IACTG,EAAYH,EAArBC,OAASE,MAChBmC,EAAenC,IAaYU,UAAQ,IACf,uBAAOF,KAAK,SACLR,MAAM,eACNO,UAAU,eAErB,sBAAMI,QAASiC,EAAerC,UAAU,oBAAxC,uBAGJ,qCACI,6BAAKsB,EAASI,OACbJ,EAASa,eAAiB,qBAAKI,IAAKjB,EAASa,gBAC7CZ,GACG,sBAAKvB,UAAU,iBAAf,UACI,sBAAMI,QAASyB,EAAf,SACI,cAAC,IAAD,CAAiBjB,KAAM4B,QAE3B,sBAAMpC,QAASiC,EAAf,SACI,cAAC,IAAD,CAAiBzB,KAAM6B,iB,QCiC5CC,EAzFM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACR/D,mBAAS,IADD,mBAC3BgE,EAD2B,KACpBC,EADoB,OAEEjE,mBAAS,IAFX,mBAE3BkE,EAF2B,KAEfC,EAFe,KAI5BrD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACC,KAAViD,EADS,uBAETd,OAAOkB,MAAM,mGAFJ,6BAKb1D,EAAMM,iBACFuC,EAAgB,GACD,KAAfW,EAPS,wBAQHG,EAAgBxE,EAAeyE,MAAMC,MAArB,UAA8BR,EAAQS,IAAtC,YAA6CC,gBAR1D,SAScJ,EAAcK,UAAUR,EAAY,YATlD,cASHS,EATG,iBAUaA,EAASL,IAAIM,iBAV1B,QAUTrB,EAVS,sBAYPb,EAAW,CACbI,KAAMkB,EACNa,UAAWC,KAAKC,MAChBC,UAAWjB,EAAQS,IACnBjB,iBAhBS,UAkBP5D,EAAUsF,WAAW,UAAUC,IAAIxC,GAlB5B,QAmBbuB,EAAS,IACTE,EAAc,IApBD,4CAAH,sDA2Cd,OACI,uBAAMrD,SAAUA,EAAUM,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBAAOC,KAAK,OACLD,UAAU,sBACVP,MAAOmD,EACPvD,SA1BF,SAACC,GAAW,IACTG,EAAYH,EAArBC,OAASE,MAChBoD,EAASpD,IAyBMS,YAAY,yEACZ6D,UAAW,MAElB,uBAAO9D,KAAK,SAASR,MAAM,SAASO,UAAU,2BAElD,wBAAOgE,QAAQ,cAAchE,UAAU,sBAAvC,UACI,+EACA,cAAC,IAAD,CAAiBY,KAAMqD,SAE3B,uBAAOhC,GAAG,cACHhC,KAAK,OACLiE,OAAO,UACP7E,SAlCM,SAACC,GAAW,IAEvB6E,EADsB7E,EAArBC,OAAS6E,MACM,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACZC,EAAaD,EAA7BE,cAAgBD,OACvB1B,EAAc0B,IAEdN,GAASE,EAAOM,cAAcR,IA2BvBhD,MAAO,CACHyD,QAAS,KAGnB9B,GACG,sBAAK9C,UAAU,0BAAf,UACI,qBACIuC,IAAKO,EACL3B,MAAO,CACH0D,gBAAiB/B,KAGzB,sBAAK9C,UAAU,qBAAqBI,QApC1B,WACtB2C,EAAc,KAmCF,UACI,0CACA,cAAC,IAAD,CAAiBnC,KAAMkE,gBCrDhCC,EA7BF,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QAAc,EACE/D,mBAAS,IADX,mBACnBoG,EADmB,KACXC,EADW,KAgB1B,OAbAC,qBAAU,WACN3G,EAAUsF,WAAW,UAChBsB,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACb,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAAxD,GAAG,oBACpCC,GAAID,EAAIC,IACLD,EAAIyD,WAEXR,EAAUK,QAGf,IAGC,sBAAKtF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc2C,QAASA,IACvB,qBAAKxB,MAAO,CAAEuE,UAAW,IAAzB,SACKV,EAAOQ,KAAI,SAAA5C,GAAK,OACb,cAAC,EAAD,CACOtB,SAAUsB,EACVrB,QAASqB,EAAMgB,YAAcjB,EAAQS,KAFhCR,EAAMX,aCtBvB,cAA+B,IAA5BU,EAA2B,EAA3BA,QAASgD,EAAkB,EAAlBA,YACjBC,EAAUC,cADyB,EAEGjH,mBAAS+D,EAAQmD,YAAcnD,EAAQmD,YAAc,IAFxD,mBAElCC,EAFkC,KAElBC,EAFkB,KASnCC,EAAW,uCAAG,4BAAAtG,EAAA,sEACKpB,EAAUsF,WAAW,UACrCqC,MAAM,YAAa,KAAMvD,EAAQS,KACjC+B,QAAQ,YAAa,QACrBgB,MAJW,OACVnB,EADU,OAKhBoB,QAAQC,IAAIrB,EAAOO,KAAKC,KAAI,SAACxD,GAAD,OAASA,EAAIyD,WALzB,2CAAH,qDAaX/F,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACF+C,EAAQmD,cAAgBC,EAFf,gCAGHpD,EAAQ2D,cAAc,CACxBR,YAAaC,IAJR,OAMTJ,IANS,2CAAH,sDAcd,OAJAT,qBAAU,WACNe,MACD,IAGC,sBAAKjG,UAAU,YAAf,UACI,uBAAMN,SAAUA,EAAUM,UAAU,cAApC,UACI,uBAAOC,KAAK,OACLsG,WAAS,EACTlH,SAxBF,SAACC,GAAW,IACTG,EAAYH,EAArBC,OAASE,MAChBuG,EAAkBvG,IAuBHS,YAAY,eACZT,MAAOsG,EACP/F,UAAU,cAEjB,uBACIC,KAAK,SACLR,MAAM,iBACNO,UAAU,UACVmB,MAAO,CACHuE,UAAW,SAIvB,sBAAM1F,UAAU,2BACVI,QApDQ,WAClB/B,EAAYmI,UACZZ,EAAQa,KAAK,MAiDT,yBCzBGC,EA5BI,SAAC,GAAD,IAAE/D,EAAF,EAAEA,QAAF,OACf,8BACI,qBAAIxB,MAAO,CAACwF,QAAS,OAAQC,eAAgB,SAAUlB,UAAW,IAAlE,UACI,6BACI,cAAC,IAAD,CAAMmB,GAAG,IAAI1F,MAAO,CAAC2F,YAAa,IAAlC,SACI,cAAC,IAAD,CAAiBlG,KAAMI,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CACI2F,GAAG,WACH1F,MAAO,CACH4F,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPlB,UAUI,cAAC,IAAD,CAAiBtG,KAAMuG,IAAQlG,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAACuE,UAAW,IAAzB,SACC/C,EAAQmD,YAAR,UAAyBnD,EAAQmD,YAAjC,kBAA0D,uBCgBhEsB,EApCG,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAY1B,EAA0B,EAA1BA,YAAahD,EAAa,EAAbA,QACzC,OACI,eAAC,IAAD,WACK0E,GAAc,cAAC,EAAD,CAAY1E,QAASA,IACpC,cAAC,IAAD,UACK0E,EACG,sBACIlG,MAAO,CACHmG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR9B,UAAW,GACXiB,QAAS,OACTC,eAAgB,UAPxB,UAUI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM/E,QAASA,MAEnB,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAAShF,QAASA,EACTgD,YAAaA,SAI9B,mCACI,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cCUbE,MAxCf,WAAgB,IAAD,EACahJ,oBAAS,GADtB,mBACJiJ,EADI,KACEC,EADF,OAEmBlJ,mBAAS,MAF5B,mBAEJ+D,EAFI,KAEKoF,EAFL,KA4BX,OAxBA7C,qBAAU,WACN7G,EAAY2J,oBAAmB,SAACC,GAExBF,EADAE,EACW,CACPnC,YAAamC,EAAKnC,YAClB1C,IAAK6E,EAAK7E,IACVkD,cAAe,SAAC4B,GAAD,OAAUD,EAAK3B,cAAc4B,KAGrC,MAEfJ,GAAQ,QAEb,IAYC,qCACKD,EACG,cAAC,EAAD,CAAWR,WAAYc,QAAQxF,GACpBgD,YAbH,WAChB,IAAMsC,EAAO5J,EAAY+J,YACzBL,EAAW,CACPjC,YAAamC,EAAKnC,YAClB1C,IAAK6E,EAAK7E,IACVkD,cAAe,SAAC4B,GAAD,OAAUD,EAAK3B,cAAc4B,OAS7BvF,QAASA,IAClB,GACN,yDAA6B,IAAIe,MAAO2E,qB,MClCpDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d03934a9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\r\nimport {authService} from \"fBase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        }\r\n        else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }\r\n            else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }\r\n            // console.log(data);\r\n        }\r\n        catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () => {\r\n        setNewAccount((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\"\r\n                       type=\"text\"\r\n                       placeholder=\"Email\"\r\n                       required\r\n                       value={email}\r\n                       onChange={onChange}\r\n                       className=\"authInput\"\r\n                />\r\n                <input name=\"password\"\r\n                       type=\"password\"\r\n                       placeholder=\"Password\"\r\n                       required\r\n                       value={password}\r\n                       onChange={onChange}\r\n                       className=\"authInput\"\r\n                />\r\n                <input type=\"submit\"\r\n                       className=\"authInput authSubmit\"\r\n                       value={newAccount ? \"계정 만들기\" : \"로그인\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"로그인하고 싶나요?\" : \"계정을 만들고 싶으신가요?\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {authService, firebaseInstance} from \"fBase\";\r\n\r\nconst SocialService = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}, } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authBtns\">\r\n            <button name=\"google\"\r\n                    className=\"authBtn\"\r\n                    onClick={onSocialClick}>\r\n                Google로 계속하기\r\n                <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button name=\"github\"\r\n                    className=\"authBtn\"\r\n                    onClick={onSocialClick}>\r\n                GitHub으로 계속하기\r\n                <FontAwesomeIcon icon={faGithub} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SocialService;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport SocialService from \"components/SocialService\";\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#10CC33\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <SocialService />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, {useState} from \"react\";\r\nimport {dbService, storageService} from \"fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [editedNweet, setEditedNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: editedNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}, } = event;\r\n        setEditedNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input type=\"text\"\r\n                                   placeholder=\"Edit your nweet\"\r\n                                   value={editedNweet}\r\n                                   onChange={onChange}\r\n                                   required />\r\n                            <input type=\"submit\"\r\n                                   value=\"Update Nweet\"\r\n                                   className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash}/>\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt}/>\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, {useState} from \"react\";\r\nimport {dbService, storageService} from \"fBase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            window.alert(\"트윗에 내용이 반드시 있어야 합니다!\");\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}, } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {target: {files}, } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}, } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (theFile) reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input type=\"text\"\r\n                       className=\"factoryInput__input\"\r\n                       value={nweet}\r\n                       onChange={onChange}\r\n                       placeholder=\"무슨 생각을 하고 계신가요?\"\r\n                       maxLength={140}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>이미지 추가하기</span>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                   type=\"file\"\r\n                   accept=\"image/*\"\r\n                   onChange={onFileChange}\r\n                   style={{\r\n                       opacity: 0,\r\n                   }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, {useState, useEffect} from \"react\";\r\nimport {dbService} from \"fBase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setNweets(nweetArray);\r\n            // console.log(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet =>\r\n                    <Nweet key={nweet.id}\r\n                           nweetObj={nweet}\r\n                           isOwner={nweet.creatorId === userObj.uid} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {authService, dbService} from \"fBase\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName ? userObj.displayName : \"\");\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService.collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}, } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\"\r\n                       autoFocus\r\n                       onChange={onChange}\r\n                       placeholder=\"Display name\"\r\n                       value={newDisplayName}\r\n                       className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\"\r\n                  onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) =>\r\n    <nav>\r\n        <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n            <li>\r\n                <Link to=\"/\" style={{marginRight: 10}}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#10CC33\"} size=\"2x\"/>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#10CC33\"} size=\"2x\"/>\r\n                    <span style={{marginTop: 10}}>\r\n                    {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>;\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, refreshUser, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj}\r\n                                     refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fBase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n\n    return (\n        <>\n            {init ?\n                <AppRouter isLoggedIn={Boolean(userObj)}\n                           refreshUser={refreshUser}\n                           userObj={userObj} />\n                : \"\"}\n            <footer>&copy; Aria-Nwitter {new Date().getFullYear()}</footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}